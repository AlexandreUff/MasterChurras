(function() {
    
function take(query) {
    return document.querySelector(query);
}

function mensagemErro(elemento,mensagem) {
        let campoMensagem;
        elemento.classList.add('input-invalido');

        if(elemento.id === 'meuNome'){
            campoMensagem = take('#erroNome');
        } else if(elemento.id === 'meuEmail'){
            campoMensagem = take('#erroEmail');
        }

        campoMensagem.innerHTML = 'üö´ '+mensagem;
        elemento.parentNode.after(campoMensagem);
}

function validarNome(n){
            //As √∫nicas retri√ß√µes ao nome s√£o apenas essas mesmas.
    if(n.value === ''){
        mensagemErro(n,'O campo de nome n√£o foi preenchido.');
        return false;
    } else if (n.value.length > 50){
        mensagemErro(n,'O campo de nome deve conter at√© 50 caracteres.');
        return false;
    } 
    return true;
}

function validarEmail(e) {

    //const regexEmail = /[a-zA-z0-9.]+@[a-zA-z0-9]+.?([a-z])*\.[a-z]{1,3}/g;

    if(e.value === ''){
        mensagemErro(e,'O campo de e-mail n√£o foi preenchido.');
        return false;
    } else if (e.value.length > 320){
        mensagemErro(e,'O campo de nome deve conter at√© 320 caracteres.');
        return false;
    } /* else if (!regexEmail.test(e.value)){
        mensagemErro(e,'Endere√ßo de e-mail inv√°lido.');
        return false;
        console.log(regexEmail.test(e))
    } */
        return true
}

function confirmacaoDeEnvio(){
    const msgBG = document.createElement('div');
    msgBG.onclick = function() {
        //this.parentNode.removeChild(this);
        location.reload();
    }
    msgBG.classList.add('fundo-mensagem');

    const msgPopUp = document.createElement('div');
    msgPopUp.classList.add('pop-up-mensagem');
    msgPopUp.innerHTML = `<p class="titulo"> <strong>Mensagem de confirma√ß√£o!</strong> </p>
                            <p> Parab√©ns! Dentro de alguns minutos voc√™ receber√° 
                            o nosso e-mail de confirma√ß√£o e, de cara, receber√°
                            as dicas Master Churras da semana! </p>`;

    msgBG.appendChild(msgPopUp);

    const body = take('body');
    body.appendChild(msgBG);
}

function envioDeFormulario(e) {
    e.preventDefault();

    const nome = take('#meuNome');
    const email = take('#meuEmail');

    if(validarNome(nome) & validarEmail(email)) confirmacaoDeEnvio();
    /* validarEmail(email); */
}

const formulario = take('.formulario');

formulario.addEventListener('submit',envioDeFormulario);

})();

console.log(
    `Ol√°!

    *Tecnologias usadas:
    - HTML;
    - CSS;
    - Javascript.

    *Objetivo da p√°gina:
    - Landing Page responsiva de um formul√°rio de envio.

    *Funcionalidades objetivas e t√©cnicas:
    - A p√°gina tem apenas como finalidade a sua apresenta√ß√£o ao usu√°rio com um formul√°rio que apenas detecta se o mesmo foi preenchido ou se encontra-se vazio. Caso n√£o esteja preenchido ou esteja preenchido de forma excessiva, os respectivos campos apresentar√£o uma mensagem de alerta para cada caso;
    - Os valores de "excesso" s√£o arbitr√°rios. N√£o h√° uma raz√£o espec√≠fica para esse bloqueio de excesso em espec√≠fico dessa Landing Page. Estes foram baseados apenas em uma breve pesquisa. Entretanto, integram uma funcionalidade bastante comum para preenchimento de formul√°rio que bloqueia excessos de caracteres com base em regulamentos pr√≥prios do desenvolvedor ou a crit√©rio do cliente;
    - Caso todos os campos de input estejam corretamente preenchidos, a mensagem de confirma√ß√£o ser√° exibida.
    
    `
)